{"version":3,"sources":["BookmarksContext.js","config.js","AddBookmark/AddBookmark.js","Rating/Rating.js","BookmarkItem/BookmarkItem.js","BookmarkList/BookmarkList.js","Nav/Nav.js","EditBookmarkForm/EditBookmarkForm.js","App.js","index.js"],"names":["BookmarksContext","React","createContext","bookmarks","addBookmark","deleteBookmark","updateBookmark","config","API_ENDPOINT","API_KEY","process","AddBookmark","state","error","handleSubmit","e","preventDefault","_e$target","target","title","url","description","rating","bookmark","value","_this","setState","fetch","method","body","JSON","stringify","headers","content-type","authorization","then","res","ok","json","Promise","reject","data","context","props","history","push","catch","console","handleClickCancel","this","react_default","a","createElement","className","onSubmit","role","message","htmlFor","type","name","id","placeholder","required","defaultValue","min","max","onClick","Component","contextType","Rating","stars","map","_","i","key","BookmarkItem","src_BookmarksContext","Consumer","href","rel","Rating_Rating","bookmarkId","cb","concat","Link","to","defaultProps","onClickDelete","BookmarkList","aria-live","BookmarkItem_BookmarkItem","Object","assign","proptTypes","PropTypes","arrayOf","shape","string","Nav","EditBookmarkForm","handleTitleUpdate","event","handleUrlUpdate","handleDescriptionUpdate","handleRatingUpdate","match","params","_this$state","newBookmark","resetFields","newFields","_this2","responseData","_this$state2","onChange","App","setBookmarks","toConsumableArray","newBookmarks","filter","bm","updatedBookmark","Authorization","contextValue","Provider","Route","exact","path","component","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ead295bc.chunk.js","sourcesContent":["import React from 'react'\n\nconst BookmarksContext = React.createContext({\n  bookmarks: [],\n  addBookmark: () => {},\n  deleteBookmark: () => {},\n  updateBookmark: () => {}\n})\n\nexport default BookmarksContext\n","export default {\n  API_ENDPOINT: `http://localhost:7000/bookmarks`,\n  API_KEY: process.env.API_KEY\n}\n","import React, { Component } from  'react';\nimport PropTypes from 'prop-types';\nimport BookmarksContext from '../BookmarksContext';\nimport config from '../config'\nimport './AddBookmark.css';\n\n// const Required = () => (\n//   <span className='AddBookmark__required'>*</span>\n// )\n\nclass AddBookmark extends Component {\n  static propTypes = {\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    }).isRequired,\n  };\n\n  static contextType = BookmarksContext;\n\n  state = {\n    error: null,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault()\n    // get the form fields from the event\n    const { title, url, description, rating } = e.target\n    const bookmark = {\n      title: title.value,\n      url: url.value,\n      description: description.value,\n      rating: rating.value,\n    }\n    this.setState({ error: null })\n    fetch(config.API_ENDPOINT, {\n      method: 'POST',\n      body: JSON.stringify(bookmark),\n      headers: {\n        'content-type': 'application/json',\n        'authorization': `bearer b6491f72-707c-460f-bf26-3c0fbedc3987`\n      }\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(error => Promise.reject(error))\n        }\n        return res.json()\n      })\n      .then(data => {\n        title.value = ''\n        url.value = ''\n        description.value = ''\n        rating.value = ''\n        this.context.addBookmark(data)\n        this.props.history.push('/')\n      })\n      .catch(error => {\n        console.error(error)\n        this.setState({ error })\n      })\n  }\n\n  handleClickCancel = () => {\n    this.props.history.push('/')\n  };\n\n  render() {\n    const { error } = this.state\n    return (\n      <section className='AddBookmark'>\n        <h2>Create a bookmark</h2>\n        <form\n          className='AddBookmark__form'\n          onSubmit={this.handleSubmit}\n        >\n          <div className='AddBookmark__error' role='alert'>\n            {error && <p>{error.message}</p>}\n          </div>\n          <div>\n            <label htmlFor='title'>\n              Title\n              {' '}\n              {/* //<Required /> */}\n            </label>\n            <input\n              type='text'\n              name='title'\n              id='title'\n              placeholder='Great website!'\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='url'>\n              URL\n              {' '}\n              {/* <Required /> */}\n            </label>\n            <input\n              type='url'\n              name='url'\n              id='url'\n              placeholder='https://www.great-website.com/'\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor='description'>\n              Description\n            </label>\n            <textarea\n              name='description'\n              id='description'\n            />\n          </div>\n          <div>\n            <label htmlFor='rating'>\n              Rating\n              {' '}\n              {/* <Required /> */}\n            </label>\n            <input\n              type='number'\n              name='rating'\n              id='rating'\n              defaultValue='1'\n              min='1'\n              max='5'\n              required\n            />\n          </div>\n          <div className='AddBookmark__buttons'>\n            <button type='button' onClick={this.handleClickCancel}>\n              Cancel\n            </button>\n            {' '}\n            <button type='submit'>\n              Save\n            </button>\n          </div>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default AddBookmark;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Rating.css';\n\nexport default function Rating(props) {\n  const stars = [0, 0, 0, 0, 0].map((_, i) =>\n    (i < props.value)\n      ? <span key={i}>&#9733; </span>\n      : <span key={i}>&#9734; </span>\n  );\n  return (\n    <div className=\"rating\">\n      {stars}\n    </div>\n  );\n}\n\nRating.propTypes = {\n  value: PropTypes.oneOf([1, 2, 3, 4, 5]).isRequired,\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport Rating from '../Rating/Rating';\nimport BookmarksContext from '../BookmarksContext';\nimport config from '../config';\nimport './BookmarkItem.css';\n\nfunction deleteBookmarkRequest(bookmarkId, cb) {\n  fetch(config.API_ENDPOINT + `/${bookmarkId}`, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json',\n      'authorization': `bearer b6491f72-707c-460f-bf26-3c0fbedc3987`\n    }\n  })\n    .then(res => {\n      if (!res.ok) {\n        return res.json().then(error => Promise.reject(error))\n      }\n      // no content on success, so skip res.json()\n    })\n    .then(() => {\n      cb(bookmarkId)\n    })\n    .catch(error => {\n      console.error(error)\n    })\n}\n\nexport default function BookmarkItem(props) {\n  return (\n    <BookmarksContext.Consumer>\n      {(context) => (\n        <li className='BookmarkItem'>\n          <div className='BookmarkItem__row'>\n            <h3 className='BookmarkItem__title'>\n              <a\n                href={props.url}\n                target='_blank'\n                rel='noopener noreferrer'>\n                {props.title}\n              </a>\n            </h3>\n            <Rating value={props.rating} />\n          </div>\n          <p className='BookmarkItem__description'>\n            {props.description}\n          </p>\n          <div className='BookmarkItem__buttons'>\n            <button\n              className='BookmarkItem__description'\n              onClick={() => {\n                deleteBookmarkRequest(\n                  props.id,\n                  context.deleteBookmark,\n                )\n              }}\n            >\n              Delete\n            </button>\n            <button className='BookmarkItem__description'>\n              <Link to={`/edit/${props.id}`}>\n                Edit Bookmark\n              </Link>\n            </button>\n          </div>\n        </li>\n      )}\n    </BookmarksContext.Consumer>\n  )\n}\n\nBookmarkItem.defaultProps = {\n  onClickDelete: () => {},\n}\n\nBookmarkItem.propTypes = {\n  id: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).isRequired,\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  desciption: PropTypes.string,\n  rating: PropTypes.number.isRequired,\n  onClickDelete: PropTypes.func,\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BookmarksContext from '../BookmarksContext';\nimport BookmarkItem from '../BookmarkItem/BookmarkItem';\nimport './BookmarkList.css'\n\nclass BookmarkList extends Component {\n  static proptTypes = {\n    bookmarks: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n      })\n    )\n  };\n\n  static defaultProps = {\n    bookmarks: []\n  };\n\n  static contextType = BookmarksContext;\n\n  render() {\n    const { bookmarks } = this.context\n    return (\n      <section className='BookmarkList'>\n        <h2>Your bookmarks</h2>\n        <ul className='BookmarkList__list' aria-live='polite'>\n          {bookmarks.map(bookmark =>\n            <BookmarkItem\n              key={bookmark.id}\n              {...bookmark}\n            />\n          )}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default BookmarkList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Nav(props) {\n  return (\n    <nav className='Nav'>\n      <Link to={'/'}>\n        Bookmark List\n      </Link>\n      {' '}\n      <Link to={'/add-bookmark'}>\n        Add Bookmark\n      </Link>\n    </nav>\n  );\n}\n","import React from 'react'\nimport BookmarksContext from '../BookmarksContext';\n\nclass EditBookmarkForm extends React.Component {\n    // static propTypes = {\n    //     match: PropTypes.shape({\n    //       params: PropTypes.object,\n    //     }),\n    //     history: PropTypes.shape({\n    //       push: PropTypes.func,\n    //     }).isRequired,\n    //   };\n\n    static contextType = BookmarksContext\n\n    state = {\n        error: null,\n        id: '',\n        title: '',\n        url: '',\n        description: '',\n        rating: 1,\n    };\n    \n    componentDidMount() {\n        const { bookmarkId } = this.props.match.params\n        fetch(`http://localhost:7000/bookmarks/${bookmarkId}`, {\n          method: 'GET',\n          headers: {\n            //'content-type': 'application/json',\n            'authorization': `Bearer b6491f72-707c-460f-bf26-3c0fbedc3987`\n          }\n        })\n          .then(res => {\n            if (!res.ok)\n              return res.json().then(error => Promise.reject(error))\n    \n            return res.json()\n          })\n          .then(responseData => {\n            this.setState({\n              id: responseData.id,\n              title: responseData.title,\n              url: responseData.url,\n              description: responseData.description,\n              rating: responseData.rating,\n            })\n          })\n          .catch(error => {\n            console.error(error)\n            this.setState({ error })\n          })\n      }\n\n    handleTitleUpdate = event => {\n        this.setState({\n            title: event.target.value\n        })\n    }\n\n    handleUrlUpdate = event => {\n        this.setState({\n            url: event.target.value\n        })\n    }\n\n    handleDescriptionUpdate = event => {\n        this.setState({\n            description: event.target.value\n        })\n    }\n\n    handleRatingUpdate = event => {\n        this.setState({\n            rating: event.target.value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const { bookmarkId } = this.props.match.params\n        const { id, title, url, description, rating } = this.state\n        //parseInt(id)\n        const newBookmark = { id, title, url, description, rating }\n        fetch(`http://localhost:7000/bookmarks/${bookmarkId}`, {\n          method: 'PATCH',\n          body: JSON.stringify(newBookmark),\n          headers: {\n            'content-type': 'application/json',\n            'authorization': `Bearer b6491f72-707c-460f-bf26-3c0fbedc3987`\n          },\n        })\n          .then(res => {\n            if (!res.ok)\n              return res.json().then(error => Promise.reject(error))\n          })\n          .then(() => {\n            this.resetFields(newBookmark)\n            this.context.updateBookmark(newBookmark)\n            this.props.history.push('/')\n          })\n          .catch(error => {\n            console.error(error)\n            this.setState({ error })\n        })\n    }\n\n    resetFields = (newFields) => {\n        this.setState({\n            id: newFields.id || '',\n            title: newFields.title || '',\n            url: newFields.url || '',\n            description: newFields.description || '',\n            rating: newFields.rating || '',\n        })\n    }\n\n    handleClickCancel = () => {\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { title, description, url, rating } = this.state\n        //console.log(title, description, url, rating)\n        return (\n            <section className='EditBookmarkForm'>\n                <h2>\n                    Edit Bookmark\n                </h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor='title'>\n                        Title\n                        </label>\n                        <input\n                            type='text'\n                            name='title'\n                            id='title'\n                            value={title}\n                            onChange={this.handleTitleUpdate}\n                            placeholder={title}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor='url'>\n                        URL\n                        </label>\n                        <input\n                            type='url'\n                            name='url'\n                            id='url'\n                            value={url}\n                            onChange={this.handleUrlUpdate}\n                            placeholder={url}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor='description'>\n                        Description\n                        </label>\n                        <textarea\n                        name='description'\n                        id='description'\n                        value={description}\n                        onChange={this.handleDescriptionUpdate}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor='rating'>\n                        Rating\n                        </label>\n                        <input\n                            type='number'\n                            name='rating'\n                            id='rating'\n                            value={rating}\n                            onChange={this.handleRatingUpdate}\n                            min='1'\n                            max='5'\n                        />\n                    </div>\n                    <div className='AddBookmark__buttons'>\n                        <button type='button' onClick={this.handleClickCancel}>\n                        Cancel\n                        </button>\n                        {' '}\n                        <button type='submit'>\n                        Save\n                        </button>\n                    </div>\n            </form>\n            </section>\n        )\n    }\n\n}\n\nexport default EditBookmarkForm","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport AddBookmark from './AddBookmark/AddBookmark';\nimport BookmarkList from './BookmarkList/BookmarkList';\nimport BookmarksContext from './BookmarksContext';\nimport Nav from './Nav/Nav';\nimport EditBookmarkForm from './EditBookmarkForm/EditBookmarkForm'\nimport config from './config';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    bookmarks: [],\n    error: null,\n  };\n\n  setBookmarks = bookmarks => {\n    this.setState({\n      bookmarks,\n      error: null,\n    })\n  }\n\n  addBookmark = bookmark => {\n    this.setState({\n      bookmarks: [ ...this.state.bookmarks, bookmark ],\n    })\n  }\n\n  deleteBookmark = bookmarkId => {\n    const newBookmarks = this.state.bookmarks.filter(bm =>\n      bm.id !== bookmarkId\n    )\n    this.setState({\n      bookmarks: newBookmarks\n    })\n  }\n\n  updateBookmark = updatedBookmark => {\n    this.setState({\n      bookmarks: this.state.bookmarks.map(bm =>\n        (bm.id !== updatedBookmark.id) ? bm : updatedBookmark\n      )\n    })\n  }\n\n  componentDidMount() {\n    fetch(config.API_ENDPOINT, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': `Bearer b6491f72-707c-460f-bf26-3c0fbedc3987`\n      }\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(error => Promise.reject(error))\n        }\n        return res.json()\n      })\n      .then(this.setBookmarks)\n      .catch(error => {\n        console.error(error)\n        this.setState({ error })\n      })\n  }\n\n  render() {\n    const contextValue = {\n      bookmarks: this.state.bookmarks,\n      addBookmark: this.addBookmark,\n      deleteBookmark: this.deleteBookmark,\n      updateBookmark: this.updateBookmark\n    }\n    return (\n      <main className='App'>\n        <h1>Bookmarks!</h1>\n        <BookmarksContext.Provider value={contextValue}>\n          <Nav />\n          <div className='content' aria-live='polite'>\n            <Route\n              exact path='/'\n              component={BookmarkList}\n            />\n            <Route\n              path='/add-bookmark'\n              component={AddBookmark}\n            />\n            <Route\n              path='/edit/:bookmarkId'\n              component={EditBookmarkForm}\n            />\n          </div>\n        </BookmarksContext.Provider>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}